<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.0"?>
<plugin>
   <extension-point id="NodeExecutionJobManagerFactory" name="NodeExecutionJobManagerFactory" schema="schema/org.knime.core.NodeExecutionJobManagerFactory.exsd"/>
   <extension-point id="JDBCDriver" name="JDBCDriver" schema="schema/JDBCDriver.exsd"/>
   <extension-point id="DataValueRenderer" name="DataValueRenderer" schema="schema/DataValueRenderer.exsd"/>
   <extension-point id="NodeFactoryClassMapper" name="Changes NodeFactory class names in saved workflows" schema="schema/NodeFactoryClassMapper.exsd"/>
   <extension
         point="org.knime.core.NodeExecutionJobManagerFactory">
      <NodeExecutionJobManagerFactory
            JobManagerFactory="org.knime.core.node.exec.ThreadNodeExecutionJobManagerFactory">
      </NodeExecutionJobManagerFactory>
   </extension>
   <extension
         point="org.knime.core.DataValueRenderer">
      <dataValue
            valueClass="org.knime.core.data.IntValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.IntValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.LongValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.IntValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.StringValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.StringValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.MultiLineStringValueRenderer$Factory"
               suggestAsDefault="false">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.blob.BinaryObjectDataValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.blob.BinaryObjectDataValueRenderer$ShortHexdumpFactory"
               suggestAsDefault="false">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.blob.BinaryObjectDataValueRenderer$LongHexdumpFactory"
               suggestAsDefault="false">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.blob.BinaryObjectDataValueMetaRenderer$Factory"
               suggestAsDefault="false">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.vector.bitvector.BitVectorValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.BitVectorValueStringRenderer$HexRendererFactory"
               suggestAsDefault="false">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.BitVectorValueStringRenderer$BinRendererFactory"
               suggestAsDefault="true">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.BitVectorValuePixelRenderer$Factory"
               suggestAsDefault="false">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.BitVectorValueStringRenderer$SetBitsRendererFactory"
               suggestAsDefault="false">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.BooleanValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.BooleanValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.vector.bytevector.ByteVectorValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.ByteVectorValueStringRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.ByteVectorValuePixelRenderer$Factory"
               suggestAsDefault="false">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.collection.CollectionDataValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.collection.CollectionValueRenderer$ShortRendererFactory"
               suggestAsDefault="true">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.collection.CollectionValueRenderer$FullRendererFactory"
               suggestAsDefault="false">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.image.png.PNGImageValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.image.png.PNGImageValueRendererFactoryUtil$StandardRendererFactory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.ComplexNumberValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.ComplexNumberValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.date.DateAndTimeValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.date.DateAndTimeValueRenderer$UsRendererFactory"
               suggestAsDefault="false">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.date.DateAndTimeValueRenderer$DefaultRendererFactory"
               suggestAsDefault="true">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.date.DateAndTimeValueRenderer$Iso8061RendererFactory"
               suggestAsDefault="false">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.DoubleValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.DoubleValueRenderer$StandardRendererFactory"
               suggestAsDefault="true">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.DoubleValueRenderer$FullPrecisionRendererFactory"
               suggestAsDefault="false">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.DoubleValueRenderer$PercentageRendererFactory"
               suggestAsDefault="false">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.DoubleGrayValueRenderer$Factory"
               suggestAsDefault="false">
         </renderer>
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.DoubleBarRenderer$Factory"
               suggestAsDefault="false">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.FuzzyIntervalValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.DefaultDataValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.FuzzyNumberValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.DefaultDataValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.IntervalValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.renderer.DefaultDataValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.model.PortObjectValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.model.PortObjectValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
      <dataValue
            valueClass="org.knime.core.data.xml.XMLValue">
         <renderer
               rendererFactoryClass="org.knime.core.data.xml.XMLValueRenderer$Factory"
               suggestAsDefault="true">
         </renderer>
      </dataValue>
   </extension>
</plugin>
