k=1;
while (k<5 && tabEspSize[i,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
}
tabMilSize;
}
func
func()
(){
tabEspSize[1,1:5]
for (i in 1:376) {
for(j in 1:98){
if(tabsp[i,j]==1){
k=1;
while(k<5 & tabEspSize[i,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
}
tabMilSize;
}
unc <- function(){
tabEspSize[1,1:5]
for (i in 1:376) {
for(j in 1:98){
if(tabsp[i,j]==1){
k=1;
while(k<5 & tabEspSize[i,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
}
}
func()
- function(){
tabEspSize[1,1:5]
for (i in 1:376) {
for(j in 1:98){
if(tabsp[i,j]==1){
k=1;
while(k<5 & tabEspSize[i,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
}
}
func <- function(){
tabEspSize[1,1:5]
for (i in 1:376) {
for(j in 1:98){
if(tabsp[i,j]==1){
k=1;
while(k<5 & tabEspSize[i,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
}
}
func()
k=1
tue = k < 5
tue
tre=tabEspSize[2,4]==0
tre
trea=(k<5 & tabEspSize[i,k]==0)
trea
trea=(k<5 && tabEspSize[i,k]==0)
trea
trea=(k<5 && tabEspSize[2,4]==0)
trea
trea=(k<5 & tabEspSize[2,4]==0)
trea
func <- function(){
tabEspSize[1,1:5]
for (i in 1:376) {
for(j in 1:98){
if(tabsp[i,j]==1){
k=1;
while(k<5 & tabEspSize[j,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
}
}
func()
ize = matrix(0, nrow=376, ncol=5) ;
colnames(tabMilSize) <- colnames(tabEspSize)
rownames(tabMilSize) <- rownames(altitude)
tabMilSize
rempliTabMilSize <- function(){
tabEspSize[1,1:5]
for (i in 1:376) {
for(j in 1:98){
if(tabsp[i,j]==1){
k=1;
while(k<5 & tabEspSize[j,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
}
}
rempliTabMilSize()
tabMilSize
tabMilSize = matrix(0, nrow=376, ncol=5) ;
tabMilSize = matrix(0, nrow=376, ncol=5) ;
colnames(tabMilSize) <- colnames(tabEspSize)
rownames(tabMilSize) <- rownames(altitude)
tabMilSize
rempliTabMilSize <- function(){
tabEspSize[1,1:5]
for (i in 1:376) {
for(j in 1:98){
if(tabsp[i,j]==1){
k=1;
while(k<5 & tabEspSize[j,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
}
}
rempliTabMilSize()
tabMilSize
tabMilSize = matrix(0, nrow=376, ncol=5) ;
colnames(tabMilSize) <- colnames(tabEspSize)
rownames(tabMilSize) <- rownames(altitude)
tabMilSize
rempliTabMilSize <- function(){
tabEspSize[1,1:5]
for (i in 1:376) {
for(j in 1:98){
if(tabsp[i,j]==1){
k=1;
while(k<5 & tabEspSize[j,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
}
}
rempliTabMilSize()
tabMilSize
tabEspSize
tabMilSize = matrix(0, nrow=376, ncol=5) ;
colnames(tabMilSize) <- colnames(tabEspSize)
rownames(tabMilSize) <- rownames(altitude)
tabMilSize
rempliTabMilSize <- function(){
tabEspSize[1,1:5]
for (i in 1:376) {
for(j in 1:98){
if(tabsp[i,j]==1){
k=1;
while(k<5 & tabEspSize[j,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
}
}
rempliTabMilSize()
tabMilSize
rempliTabMilSize <- function(){
for (i in 1:376) {
for(j in 1:98){
if(tabsp[i,j]==1){
k=1;
while(k<5 & tabEspSize[j,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
}
}
rempliTabMilSize()
tabMilSize
tabMilSize = matrix(0, nrow=376, ncol=5) ;
colnames(tabMilSize) <- colnames(tabEspSize)
rownames(tabMilSize) <- rownames(altitude)
tabMilSize
rempliTabMilSize <- function(){
for(i in 1:376) {
for(j in 1:98){
if(tabsp[i,j]==1){
k=1;
while(k<5 && tabEspSize[j,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
}
}
rempliTabMilSize()
tabMilSize
tabMilSize = matrix(0, nrow=376, ncol=5) ;
colnames(tabMilSize) <- colnames(tabEspSize)
rownames(tabMilSize) <- rownames(altitude)
rempliTabMilSize <- function(){
tabMilSize
for(i in 1:376) {
if(tabsp[i,j]==1){
k=k+1;
}
}
}
}
}
for(j in 1:98){
rempliTabMilSize()
while(k<5 && tabEspSize[j,k]==0){
tabMilSize[i,k]=tabMilSize[i,k]+1;
k=1;
tabMilSize = matrix(0, nrow=376, ncol=5) ;
rownames(tabMilSize) <- rownames(altitude)
colnames(tabMilSize) <- colnames(tabEspSize)
tabMilSize
for(i in 1:376) {
for(j in 1:98){
if(tabsp[i,j]==1){
k=1;
while(k<5 && tabEspSize[j,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
}
}
for(i in 1:376) {
for(j in 1:98){
if(tabsp[i,j]==1){
k=1;
while(k<5 && tabEspSize[j,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
}
tabMilSize
rempliTabMilSize <- function(){
for(i in 1:376) {
for(j in 1:98){
if(tabsp[i,j]==1){
k=1;
while(k<5 && tabEspSize[j,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
};
}
rempliTabMilSize()
tabMilSize
for(i in 1:376) {
for(j in 1:98){
if(tabsp[i,j]==1){
k=1;
while(k<5 && tabEspSize[j,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
};
tabMilSize
for(i in 1:376) {
for(j in 1:98){
if(tabsp[i,j]==1){
k=1;
while(k<5 && tabEspSize[j,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
};
tabMilSize = matrix(0, nrow=376, ncol=5) ;
colnames(tabMilSize) <- colnames(tabEspSize)
rownames(tabMilSize) <- rownames(altitude)
tabMilSize
for(i in 1:376) {
for(j in 1:98){
if(tabsp[i,j]==1){
k=1;
while(k<5 && tabEspSize[j,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
};
tabMilSize
tabMilSize = matrix(0, nrow=376, ncol=5) ;
colnames(tabMilSize) <- colnames(tabEspSize)
tabMilSize
rownames(tabMilSize) <- rownames(altitude)
for(i in 1:376) {
for(j in 1:98){
if(tabsp[i,j]==1){
k=1;
while(k<5 && tabEspSize[j,k]==0){
k=k+1;
}
tabMilSize[i,k]=tabMilSize[i,k]+1;
}
}
};
tabMilSize
altitude[2]
altitude[1]
alt=0;
nbAlt=0;
for(i in 1:376) {
if(altitude[1]>alt)
{
alt=altitude[1];
nbAlt=nbAlt+1;
}
};
warnings()
alt=0;
nbAlt=0;
for(i in 1:376) {
if(altitude[i]>alt)
{
alt=altitude[i];
nbAlt=nbAlt+1;
}
};
alt=0;
nbAlt=0;
for(i in 1:376) {
if(altitude[1,i]>alt)
{
alt=altitude[i];
nbAlt=nbAlt+1;
}
};
altitude[1]
altitude[,1]
altitude[1,]
alt=0;
nbAlt=0;
for(i in 1:376) {
if(altitude[i,]>alt)
{
alt=altitude[i];
nbAlt=nbAlt+1;
}
};
alt=0;
nbAlt=0;
for(i in 1:376) {
if(altitude[i,]>alt)
{
alt=altitude[i,];
nbAlt=nbAlt+1;
}
};
nbAlt
colnames(tabMilSize[1,]) <- "toto"
tabMilSize[1,]
tabAltSize = matrix(0, nrow=183, ncol=5) ;
colnames(tabAltSize[,1]) <- "toto"
tabAltSize[,1]
colnames(tabAltSize[1]) <- toto
colnames(tabAltSize[1]) <- "toto"
colnames(tabAltSize)[1] <- "toto"
altName
# Trouver le nombre d'altitude diffÃ©rents par milieu
altName=c()
alt=0;
nbAlt=0;
for(i in 1:376) {
if(altitude[i,]>alt)
{
alt=altitude[i,];
push("altName",alt);
nbAlt=nbAlt+1;
}
};
nbAlt
?append
altName=c()
alt=0;
nbAlt=0;
for(i in 1:376) {
if(altitude[i,]>alt)
{
alt=altitude[i,];
append(altName,alt ,after=lenght(altName));
nbAlt=nbAlt+1;
}
};
altName=c()
alt=0;
nbAlt=0;
for(i in 1:376) {
if(altitude[i,]>alt)
{
alt=altitude[i,];
append(altName,alt ,after=length(altName));
nbAlt=nbAlt+1;
}
};
nbAlt
altName
altName=c()
append(altName,3 ,after=length(altName));
altName
altName=c(0)
append(altName,3 ,after=length(altName));
altName
alt=0;
altName=c()
altName=append(altName,3 ,after=length(altName));
altName
altName=c()
alt=0;
nbAlt=0;
for(i in 1:376) {
if(altitude[i,]>alt)
{
alt=altitude[i,];
altName=append(altName,alt ,after=length(altName));
nbAlt=nbAlt+1;
}
};
altName
tabAltSize = matrix(0, nrow=183, ncol=5) ;
colnames(tabAltSize) <- colnames(tabEspSize);
rownames(tabAltSize) <- altName;
tabAltSize
tabMilSize
tabMilSize
alt=0;
nbAlt=0;
for(i in 1:376) {
for(k in 1:5){
if(altitude[i,]>alt)
{
alt=altitude[i,];
}
nbAlt=nbAlt+1;
tabAltSize[alt,k]=tabAltSize[nbAlt,k]+tabMilSize[i,k];
}
};
tabAltSize[alt,k]=tabAltSize[nbAlt,k]+tabMilSize[i,k];
alt=0;
nbAlt=0;
for(i in 1:376) {
for(k in 1:5){
if(altitude[i,]>alt)
{
alt=altitude[i,];
nbAlt=nbAlt+1;
}
tabAltSize[alt,k]=tabAltSize[nbAlt,k]+tabMilSize[i,k];
}
};
tabAltSize[183:5]
tabAltSize[183,5]
colnames(tabAltSize) <- colnames(tabEspSize);
tabAltSize = matrix(0, nrow=183, ncol=5) ;
colnames(tabAltSize) <- colnames(tabEspSize);
tabAltSize[183,5]
alt=0;
nbAlt=0;
for(i in 1:376) {
rownames(tabAltSize) <- altName;
for(k in 1:5){
if(altitude[i,]>alt)
{
alt=altitude[i,];
nbAlt=nbAlt+1;
}
tabAltSize[nbAlt,k]=tabAltSize[nbAlt,k]+tabMilSize[i,k];
}
};
tabAltSize
tabMilSize
altitude
tabEspSize
tab
tabEspSize
tab
tabMilSize
tabAltSize
altitude
